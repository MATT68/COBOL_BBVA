 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                    S Q L 
 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX


 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
 Ejercicio 2:
 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
 3.- 
 SELECT C.CLIENTE, NOMBRE, APELLIDO1, APELLIDO2, TIPO
 FROM CLIENTES C
 WHERE TELEFONO IS NULL;
 
 4.- SELECT C.CLIENTE, NOMBRE, APELLIDO1, APELLIDO2, TIPO, TELEFONO 
 FROM CLIENTES C
 WHERE TELEFONO IS NULL
 ORDER BY TIPO, APELLIDO1, APELLIDO2 

 5.- 
SELECT C.CLIENTE,  APELLIDO1, TIPO
 FROM CLIENTES C
 WHERE TIPO > 'A2'
 ORDER BY CLIENTE DESC 

 6.- SELECT  NOMBRE, APELLIDO1, APELLIDO2
 FROM CLIENTES C
 WHERE VENDEDOR IS NULL OR FX_NACIMIENTO IS NULL;
 
 7.- SELECT VENDEDOR , NOMBRE , APELLIDO --, FX_CONTRAT 
 FROM VENDEDOR v 
WHERE FX_CONTRAT BETWEEN '2002-03-01' AND '2002-12-31'

 8.- 
SELECT NOMBRE, APELLIDO1 , APELLIDO2 , VENDEDOR , FX_ALTA  
 FROM CLIENTES C 
WHERE VENDEDOR  LIKE 'V1%' AND FX_ALTA <= '2003-12-31'

 9.- SELECT NOMBRE, APELLIDO1 , APELLIDO2 , VENDEDOR , FX_NACIMIENTO, TELEFONO 
 FROM CLIENTES C 
WHERE FX_NACIMIENTO BETWEEN '1950-01-01' AND '1970-12-31'
  AND ((CODPOSTAL LIKE '08%' OR CODPOSTAL LIKE '28%')
   OR TELEFONO LIKE '6%' )
  ORDER BY  APELLIDO1 , APELLIDO2, NOMBRE

 10.- SELECT NOMBRE, APELLIDO1 , APELLIDO2 -- , VENDEDOR , FX_NACIMIENTO, TELEFONO 
 FROM CLIENTES C 
WHERE APELLIDO1 LIKE '%R%' OR APELLIDO2 LIKE '%R%' 

 11.- SELECT NOMBRE, APELLIDO1 , APELLIDO2 -- , VENDEDOR , FX_NACIMIENTO, TELEFONO 
 FROM CLIENTES C 
WHERE NOMBRE LIKE 'E%'

 12.- Como la diapositiva 46 con el ejemplo IN. 

 13.- SELECT DISTINCT VENDEDOR 
       FROM CLIENTES

 14.- Como la diapositiva 46 con el ejemplo IN.Pero con el NOT.  
  SELECT CLIENTE, NOMBRE,
  APELLIDO, TIPO
  FROM CLIENTES
  WHERE TIPO NOT IN ('A3','A4','B1');

 15.- Diapo 43.
 SELECT VENDEDOR, NOMBRE,
  APELLIDO
  FROM VENDEDOR
  WHERE VENDEDOR LIKE '_2%'

 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
 Ejercicio 3:
 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
 
 1.- SELECT SUBSTR(NOMBRE,1,1) || '. ' || 
       STRIP(APELLIDO1,T) || '  ' || 
       RTRIM(APELLIDO2) AS NOMBRE_COMPLETO, 
 SUBSTR(CODPOSTAL,1,2) AS PROVINCIA  
 FROM CLIENTES c 

 2.- SELECT VENDEDOR, NOMBRE, APELLIDO, SALARIO,  
       SUBSTR(DIGITS(SALARIO),2,2) AS SALARIO_X_1000
 FROM VENDEDOR  
 
 3.- SELECT NOMBRE,APELLIDO1,APELLIDO2, COALESCE(TELEFONO,'NO INFORMADO') TELEF  
 FROM CLIENTES c 
 
 4.- SELECT STRIP(CLIENTE,L,'0') CUSTOMER,
       LTRIM(CLIENTE,'0') OPCION2,
       NOM_AUTORIZADO, APE_AUTORIZADO 
 FROM TARJETAS
 
 5.- 
-- UPDATE VENDEDOR 
--   SET FX_CONTRAT = '2020-02-29'
-- WHERE VENDEDOR = 'V134' ;
SELECT VENDEDOR, FX_CONTRAT, CURRENT DATE FX_HOY, 
       CURRENT_DATE - FX_CONTRAT YYYYMMDD,
       YEAR(CURRENT_DATE - FX_CONTRAT) AÑOS_CONTRATADO
 FROM VENDEDOR v 
 
 KEVIN.- SELECT VENDEDOR, SALARIO,  LENGTH(STRIP(DIGITS(SALARIO),L,'0')), SUBSTR(SALARIO, LENGTH(SALARIO) - 4,2)
 FROM VENDEDOR v 
 
 6.- SELECT  APELLIDO1 , APELLIDO2 , 
        LENGTH(RTRIM(APELLIDO1)) + LENGTH(RTRIM(APELLIDO2)) CARACTERES,
        CHAR(FX_NACIMIENTO,EUR) FECHA_NAC, 
        YEAR(CURRENT_DATE - FX_NACIMIENTO)  AS EDAD
FROM CLIENTES c 

7.- SELECT VENDEDOR , SALARIO , 
       ROUND((SALARIO/14)*0.95,2) SAL_MENSUAL
  FROM VENDEDOR v 
 WHERE  (SALARIO/14)*0.95 > 1000
 
 8.- 
 
 9.- SELECT *             -- ANYO_ACTUAL + ANYO_ANT + ANYO_CUA_ANT 
 FROM COMPCLIE 
WHERE ANYO_ANT     > ANYO_DOS_ANT 
  AND ANYO_DOS_ANT > ANYO_TRE_ANT 
  AND ANYO_TRE_ANT > ANYO_CUA_ANT
  
 10.- SELECT CLIENTE , 
       (ANYO_ACTUAL + ANYO_ANT + ANYO_DOS_ANT + ANYO_TRE_ANT + ANYO_CUA_ANT)/48  
 FROM COMPCLIE 

11.-

12.- SELECT VENDEDOR, FX_CONTRAT, '2006-01-01' FX_REFERENCIA, 
       365*3 - (DAYS('2006-01-01') - DAYS(FX_CONTRAT)) AS DIAS_HASTA_COMM, 
       (DAYS('2006-01-01') - DAYS('2003-01-01')) - (DAYS('2006-01-01') - DAYS(FX_CONTRAT)),
       (FX_CONTRAT + 3 YEARS) - '2006-01-01' AS YYYYMMDD 
  FROM VENDEDOR v 
  WHERE YEAR('2006-01-01' - FX_CONTRAT) < 3 


13.-
14.- SELECT CLIENTE, COMPRAS_ANUAL, FX_NACIMIENTO,
       CASE
        WHEN YEAR(CURRENT_DATE - FX_NACIMIENTO) < 20              THEN ' < 20 '
        WHEN YEAR(CURRENT_DATE - FX_NACIMIENTO) BETWEEN 20 AND 30 THEN ' 20 - 30  '  
        WHEN YEAR(CURRENT_DATE - FX_NACIMIENTO) BETWEEN 30 AND 40 THEN ' 30 - 40  '  
        WHEN YEAR(CURRENT_DATE - FX_NACIMIENTO) BETWEEN 40 AND 50 THEN ' 40 - 50  '  
        WHEN YEAR(CURRENT_DATE - FX_NACIMIENTO) BETWEEN 50 AND 60 THEN ' 50 - 60  '  
        ELSE                                                           ' > 60  '
       END 
       AS RANGO_EDAD
 FROM CLIENTES 
 
  EJERCICIOS EXTRA PARA EL GRUPO 3 (DE FUNCIONES ESCALARES):
  
  1.- Mostrar para cada cliente el día de la semana y el mes en el que se dieron de alta (por separado, en número y en nombre).
  2.- Mostrar el nombre y apellidos de los clientes en minúsculas.
  3.- Mostrar el nombre y apellidos de los clientes en formato "Capitalize" (Matias Andres Perez).
  4.- Mostrar la representación en Unicode UTF-8 del nombre y apellidos de los clientes (No hay función Unicode en DB2 LUW).

SELECT DAYNAME(FX_ALTA,'CLDR181_es_ES') DIA , 
       UPPER(DAYNAME(FX_ALTA,'CLDR181_es_ES')) DIA2 , 
       DAYOFWEEK_ISO(FX_ALTA) NUM_DIA,
       MONTHNAME(FX_ALTA,'CLDR181_es_ES') MES,
       LOWER(NOMBRE), LCASE(APELLIDO1), LOWER(APELLIDO2),
       SUBSTR(NOMBRE,1,1) || SUBSTR(LOWER(NOMBRE),2) Nombre,
       SUBSTR(APELLIDO1,1,1) || SUBSTR(LOWER(APELLIDO1),2) Apellido1
  FROM CLIENTES c 

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
 Ejercicio 4:
 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

 1.- SELECT  VENDEDOR, SUM(COMPRAS_ANUAL) 
 FROM CLIENTES 
GROUP BY VENDEDOR 

3.- 
SELECT CLIENTE, COUNT(*) TARJETAS  
 FROM TARJETAS 
 GROUP BY CLIENTE 
 HAVING COUNT(*) > 1 
 
 5.- 
SELECT TIPO, COUNT(*) CLIENTES, 
 AVG(COMPRAS_ANUAL) MEDIA_COMPRAS,
 SUM(COMPRAS_ANUAL) SUMA_COMPRAS,
 STDDEV(COMPRAS_ANUAL) DESV_TIP_COMPRAS,
 VARIANCE(COMPRAS_ANUAL) VARIANZA_COMPRAS
 FROM CLIENTES 
 GROUP BY TIPO 
--  HAVING COUNT(*) > 1 

7.- 
 
 
 
