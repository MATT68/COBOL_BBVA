
 Ejercicios:

 1.- JCL para copiar el dataset 'TSOUJ40.FICHERO.EMPLEADO' en un dataset
     de tu usuario, llamado 'TSOUJxx.FICHERO.EMPLEADO' donde xx es tu 
     número de usuario.

     El JCL tendrá un paso de borrado y uno de copiado.

 2.- Añadir  dos pasos al JCL anterior para copiar los datasets secuenciales
     TSOUJ40.CCAI.DATA.CLIENTES
     TSOUJ40.CCAI.DATA.EMPRESAS
     en dos datasets que se llamen igual, pero con tu usuario como 
     primer puntero.

 3.- Copiar usando los paneles desde la librería TSOUJXX.CCAI.JCL
      a la librería TSOUJXX.CCAI.JCL2 los miembros IEBCOP*, NEWDS, BORRADO,
      y otro de tu gusto.
 
 4.- Copiar el miembro COMPICOX desde un TSOUJXX.CCAI.PROC a la librería
     TSOUJXX.CCAI.JCL.

 5.- Usando un JCL, que ejecute el programa IEBCOPY, debes copiar la libreria
     TSOUJxx.CCAI.JCL en la librería TSOUJXX.CCAI.JCL4.
     
      un paso de JCL ===>  copy TSOUJxx.CCAI.JCL TSOUJxx.CCAI.JCL4
  
 6.- Borrar las librerías :
     TSOUJxx.CCAI.JCL2
     TSOUJxx.CCAI.JCL4
     TSOUJxx.CCAI.JCL5
     
     Los parámetros de espacio de la nueva librería serán en 5 pistas de      primaria, 5 de secundaria y 2 para el directorio.
     
     ------------------------------------------------------------
              E J E R C I C I O S         C O B O L 
     ------------------------------------------------------------ 
 7.- Programa pseudo-inicial:
     - Definimos una variable de tipo contador (donde contabilizamos el número de iteraciones).
     - Agregamos un switch de FIN-FICHERO....
     - En el párrafo PROCESO, asignamos nuestro nombre completo a las variables WS-NOMBRE, WS-APELLIDO1 y WS-APELLIDO2 
       (lo hacemos con tres sentencias MOVE).
     - A continuación de los MOVES hacemos un DISPLAY de la estructura WS-CLIENTE.
     - Ponemos la cláusula UNTIL en el proceso...
     - Nuestro programa tiene que mostrar en la salida:
       Diez veces el DISPLAY: ' *****  PROCESO **** '
       Estadísticas del programa (el valor de la variable contador.):
          TOTAL FILAS PROCESADAS : 10
       
   8.-  Sobre el ejercicio anterior, modificamos los displays, para que en cada paso por el PROCESO muestre si el número
        de la vuelta que estamos dando es PAR o IMPAR.
         
        DIVIDE WC-CONTADOR BY 2 GIVING Ws-RESULTADO REMAINDER ws-RESTO
        
        IF "comprueba aquí si es par"
           DISPLAY ' PAR '
        ELSE
            DISPLAY ' ES IMPAR '
        END-IF
        
   9.- Lectura de ficheros.
       Vamos a procesar el fichero TSOUJxx.FICHERO.EMPLEADO. 
       Por cada fila leída vamos a lanzar un DISPLAY para mostrar en el SPOOL algo así:
       NOMBRE  :   XXXXXX   APELLIDO:  XXXXXXXX   SALARIO : 999999999 COMISION: 000000000
       
       Por tanto, lo primero será que tengas el fichero a tu disposición (si no lo tienes
        cópialo del  TSOUJ40.FICHERO.EMPLEADO).
       
       En el programa tenemos que agregar líneas para controlar el fichero en los siguientes puntos:
        A.- ENVIRONMENT DIVISION ==> FILE-CONTROL. ==>  SELECT EMPLE ASSIGN EMPLEADO ....
        B.- DATA DIVISION.       ==> FILE SECTION. ==>  FD  STATEMENT
        C.- DATA DIVISION.       ==> WORKING-STORAGE SECTION. ==>  01  WS-REG-EMPLEADO.
        D.- OPEN  ----  READ - READ - READ - ..... - CLOSE
        
        A.  SELECT EMPLE 
              ASSIGN EMPLEADO
              FILE STATUS IS WS-FILE-STATUS.
              
        B.- FD  EMPLE 
                RECORD CONTAINS 59 CHARACTERS
                DATA RECORD IS REC-EMPLE.
            01  REC-EMPLE                      PIC X(59).
            
        C.- 01  WS-REG-EMPLEADO.
                05 ....
                
        D.-  OPEN INPUT ...
        
             READ EMPLE
                INTO  WS-REG-EMPLEADO
                AT END
                     SET FINAL-FICHERO  TO TRUE
             END-READ
             
             CLOSE EMPLE.
          
         TODO PROGRAMA COBOL DEBE MOSTRAR AL TERMINAR UNAS ESTADÍSTICAS COMPLETAS DE LOS FICHEROS TRATADOS.
              
              
10.-  En este programa vamos a agregar la siguiente funcionalidad:

       A. Sobre el programa que te funcionó el último día, debes agregar la 
       gestión de errores, para hacer los displays y para el programa cuando 
       se produzca un error.

       B.- La copy del fichero de empleado la tienes que traer con la 
       sentencia COPY.

       C.- Si el apellido es menor que M, hacemos un display de:
       NUMERO DE EMPLEADO, NOMBRE, APELLIDO Y SALARIO

       Si el apellido es mayor que M y menor que R hacemos un display de:
       NUMERO DE EMPLEADO, NOMBRE, APELLIDO, DEPT Y COMISION

       Si el apellido es mayor que R mostramos EMPLEADO, NOMBRE, APELLIDO Y 
       SALARIO + COMISION.
       
   11.- OPCIONAL: Instalación de Eclipse en la máquina virtual
        sudo apt install default-jre
        sudo snap install --classic eclipse 
         
   12.- Tratamiento del fichero de VENDEDOR.
        Leemos el fichero TSOUJXX.FICHERO.VENDEDOR (primero debes copiarlo desde TSOUJ40.FICHERO.VENDEDOR ).
        
        Nuestro programa leerá todos los vendedores y por cada uno hará el siguiente tratamiento:
        Si el codigo de vendedor comienza por : 'V0'
         mostraremos: BECARIO - NOMBRE - APELLIDO - FECHA ALTA (EN FORMATO AAAAMMDD)
        Si el codigo de vendedor comienza por : 'V1'
         mostraremos: JUNIOR  - NOMBRE - APELLIDO - FECHA ALTA (EN FORMATO AAAAMMDD)
        Si el codigo de vendedor comienza por : 'V2'
         mostraremos: SENIOR  - NOMBRE - APELLIDO - FECHA ALTA (EN FORMATO AAAAMMDD)
        Si el codigo de vendedor comienza por : 'V3'
         mostraremos: ANALISTA  - NOMBRE - APELLIDO - FECHA ALTA (EN FORMATO AAAAMMDD)
        Si el codigo de vendedor comienza por : 'V4'
         mostraremos: GERENTE  - NOMBRE - APELLIDO - FECHA ALTA (EN FORMATO AAAAMMDD)
        Si el codigo de vendedor comienza por : 'V5'
         mostraremos: SOCIO  - NOMBRE - APELLIDO - FECHA ALTA (EN FORMATO AAAAMMDD)
         
        Además cuando el código de vendedor coincida con el código de responsable, mostraremos en la salida:
         **************************************************** 
          Vxxx - NOMBRE - APELLIDO - ES EL JEFE SUPREMO
         ****************************************************
         
     13.- Vamos a escribir un fichero llamado VENDC3PO.
          El nombre del dataset secuencial será TSOUJxx.FICHERO.VENDEDOR.COMP3
          Este fichero va a contener los mismos campos que el fichero VENDEDOR más un campo de SALARIO en formato COMP-3.
          Este campo estará entre el salario actual y la sección.
          Puntos a agregar / considerar en el programa:
          - SELECT ASSIGN
          - FD
          - "COPY"
          - OPEN / WRITE / CLOSE
          - ESTADISTICAS
          
     14.- (Antes de correr hay que aprender a caminar)
      Leemos el fichero de vendedores. Y escribimos en dos ficheros de salida.
      A uno lo podemos llamar VENDC3PO y al otro VENDESAL (por ejemplo).
      Por cada registro leído del fichero de vendedores haremos el siguiente proceso:
       Si el salario es menor que 1000 escribiremos un registro en el fichero VENDC3PO.
       Si el salario no es menor que 1000, escribiremos en en VENDESAL.
      El formato del fichero VENDC3PO es similar al fichero del ejercicio anterior. 
      El formato del fichero VENDESAL es el mismo que el de entrada. (Te vale la copy COPYVEND pero haciendo 
       un replacing diferente). 
      En el párrafo FIN se deben emitir las estadísticas completas del programa:
      *********************************************************
      ***   FILAS LEIDAS DEL FICHERO A
      ***    FILAS ESCRITAS EN EL FICHERO B
      ***    FILAS ESCRITAS EN EL FICHERO C
      ********************************************************* 
         
      15.- CRUCE DE FICHEROS. (Aprendiendo a correr)
      Para este cruce de ficheros vamos a hacer el siguiente supuesto. Nos dan dos ficheros:
      XXXX.FICHERO.EMPLEADOS
      XXXX.FICHERO.EMPLEADOS.BANK2 (esta copy la tenemos en el fichero CPEMPBK2)
      Son los empleados de dos bancos que se van a fusionar. Y queremos separarlos en tres "botes" diferentes.
      Uno con aquellos empleados cuyo código de empleado se repite en ambos bancos (DUPLICA2).
      Otro con los empleados del primer fichero que no están en el segundo (EMPLE1)
      Un último fichero que contiene los empleados exclusivos del BANK2 (EMPLEB2).
      
      La estructura del fichero de salida DUPLICA2 será:
      CO-EMPLEADO
      NOMBRE1
      APELLIDO1
      NOMBRE2
      APELLIDO2
      
      La estructura del fichero EMPLE1 será la COPYEMPL que ya hemos manejado en otras ocasiones.
      La estructura del fichero EMPLEB2 será la misma de entrada, CPEMPBK2.
      
      Por supuestos,  se deben emitir las estadísticas completas del programa:
      *********************************************************
      ***   FILAS LEIDAS DEL FICHERO A
      ***   FILAS LEIDAS DEL FICHERO B
      ***    FILAS ESCRITAS EN EL FICHERO C
      ***    FILAS ESCRITAS EN EL FICHERO D
      ***    FILAS ESCRITAS EN EL FICHERO E
      ********************************************************* 
      
      FELIZ NOCHEVIEJA Y QUE TENGAS UN AÑO MÁS SANO QUE EL AMANECER DEL DÍA 1 !!!
      

